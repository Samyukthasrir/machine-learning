import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load your sales data (assuming it's in a CSV file)
sales_data = pd.read_csv("sales_data.csv")

# Explore your data
print(sales_data.head())

# Preprocess your data if needed (e.g., handle missing values, convert categorical variables to numerical)

# Split data into features (X) and target variable (y)
X = sales_data.drop(columns=['Date', 'Sales'])  # Assuming 'Date' is not needed for prediction
y = sales_data['Sales']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize and train the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)

# You can also use the trained model to predict future sales
# For example, create a DataFrame with future dates and features, and use model.predict() to predict sales
