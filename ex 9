import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import mean_squared_error
np.random.seed(0)
X = np.random.rand(100, 1) * 10
y = 2 * X + 3 + np.random.randn(100, 1)

linear_reg = LinearRegression()
linear_reg.fit(X, y)

degree = 2  
poly_features = PolynomialFeatures(degree=degree)
X_poly = poly_features.fit_transform(X)

poly_reg = LinearRegression()
poly_reg.fit(X_poly, y)
plt.figure(figsize=(10, 6))
plt.scatter(X, y, color='blue', label='Data Points')

plt.plot(X, linear_reg.predict(X), color='red', label='Linear Regression')
X_plot = np.linspace(0, 10, 100).reshape(-1, 1)
X_plot_poly = poly_features.transform(X_plot)
plt.plot(X_plot, poly_reg.predict(X_plot_poly), color='green', label='Polynomial Regression')

plt.title('Linear vs Polynomial Regression')
plt.xlabel('X')
plt.ylabel('y')
plt.legend()
plt.grid(True)
plt.show()
linear_mse = mean_squared_error(y, linear_reg.predict(X))
poly_mse = mean_squared_error(y, poly_reg.predict(X_poly))

print("Mean Squared Error (Linear Regression):", linear_mse)
print("Mean Squared Error (Polynomial Regression):", poly_mse)
